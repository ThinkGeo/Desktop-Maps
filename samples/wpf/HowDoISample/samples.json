[
  {
    "title": "Map Navigation",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.NavigationMap",
        "title": "Navigation Map",
        "description": "Learn how to use code to zoom, pan, and rotate the map control.",
        "source": "Samples/MapNavigation/NavigationMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ZoomToExtents",
        "title": "Zoom to Extents",
        "description": "Learn how to set the map extent in a variety of different ways.",
        "source": "Samples/MapNavigation/ZoomToExtents"
      }
    ]
  },
  {
    "title": "Map Online Data",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ThinkGeoRasterMap",
        "title": "ThinkGeo Raster Map",
        "description": "This sample shows how to display ThinkGeo cloud raster background images.",
        "source": "Samples/MapOnlineData/ThinkGeoRasterMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ThinkGeoVectorMap",
        "title": "ThinkGeo Vector Map",
        "description": "This sample shows how to display ThinkGeo cloud vector background maps.",
        "source": "Samples/MapOnlineData/ThinkGeoVectorMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.BingMap",
        "title": "Bing Map",
        "description": "This sample shows how to display a Bing Maps layer.",
        "source": "Samples/MapOnlineData/BingMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GoogleMap",
        "title": "Google Map",
        "description": "This sample shows how to display a Google Maps layer.",
        "source": "Samples/MapOnlineData/GoogleMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.NOAAWeatherStations",
        "title": "NOAA Weather Stations",
        "description": "This sample shows how to display NOAA weather stations current readings to your map.",
        "source": "Samples/MapOnlineData/NOAAWeatherStations"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.NOAAWeatherWarnings",
        "title": "NOAA Weather Warnings",
        "description": "This sample shows how to display NOAA weather warnings to your map.",
        "source": "Samples/MapOnlineData/NOAAWeatherWarnings"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.OGCAPIFeatureSever",
        "title": "OGC API Feature Sever",
        "description": "This sample shows how to display a OGC API Feature layer.",
        "source": "Samples/MapOnlineData/OGCAPIFeatureSever"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.OpenStreetMap",
        "title": "Open Street Map",
        "description": "This sample shows how to display a Open Street Maps layer.",
        "source": "Samples/MapOnlineData/OpenStreetMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.WFS",
        "title": "WFS",
        "description": "This sample shows how to display a WFS V2 Feature Layer.(This WFSV2 sever may be slow )",
        "source": "Samples/MapOnlineData/WFS"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.WMS",
        "title": "WMS",
        "description": "This sample shows how to display a WMS layer. (This sample may be slow as we use a public WMS sever)",
        "source": "Samples/MapOnlineData/WMS"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.WMTS",
        "title": "WMTS",
        "description": "This sample shows how to display a WMTS layer. (This sample may be slow as we use a public WMTS sever)",
        "source": "Samples/MapOnlineData/WMTS"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CachingMapTiles",
        "title": "Caching Map Tiles",
        "description": "Learn how to cache map tiles. Caching tiles on an Overlay allows you to store images of rendered areas on the local disk and reuse them for faster rendering times. Saved tile images can be found in the cache folder within this project's debug folder.",
        "source": "Samples/MapOnlineData/CachingMapTiles"
      }
    ]
  },
  {
    "title": "Map Offline Data",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGeoPackageFile",
        "title": "Display a GeoPackage File",
        "description": "Show the GeoPackage File",
        "source": "Samples/MapOfflineData/DisplayGeoPackageFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayMBTilesFile",
        "title": "Display a MBTiles File",
        "description": "Show the Standard MBTiles File (v1.3)",
        "source": "Samples/MapOfflineData/DisplayMBTilesFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplaySQLiteFile",
        "title": "Display a SQLite File",
        "description": "This sample shows how to display a SQLite layer.",
        "source": "Samples/MapOfflineData/Database/DisplaySQLiteFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayCommonRasterFile",
        "title": "Display Common Raster File",
        "description": "This sample shows how to display common images types such as PNG, JPEG, Bitmap etc.",
        "source": "Samples/MapOfflineData/Raster/DisplayCommonRasterFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayECWFile",
        "title": "Display an ECW File",
        "description": "This sample shows how to display a ECW image.",
        "source": "Samples/MapOfflineData/Raster/DisplayECWFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayESRIGridFile",
        "title": "Display a ESRI Grid File",
        "description": "This sample shows how to display a ESRI grid layer.",
        "source": "Samples/MapOfflineData/Raster/DisplayESRIGridFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGdalFile",
        "title": "Display a Gdal File",
        "description": "This sample shows how to display raster format data supported by Gdal.",
        "source": "Samples/MapOfflineData/Raster/DisplayGdalFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGeoTiffFile",
        "title": "Display a GeoTiff File",
        "description": "This sample shows how to display a GeoTiff image.",
        "source": "Samples/MapOfflineData/Raster/DisplayGeoTiffFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayJPEG2000File",
        "title": "Display a JPEG2000 File",
        "description": "This sample shows how to display a JPEG2000 image.",
        "source": "Samples/MapOfflineData/Raster/DisplayJPEG2000File"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayMrSidFile",
        "title": "Display a MrSid File",
        "description": "This sample shows how to display a MrSids layer.",
        "source": "Samples/MapOfflineData/Raster/DisplayMrSidFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayCADFile",
        "title": "Display a CAD File",
        "description": "This sample shows how to display a CAD layer using data from a .dwg file.",
        "source": "Samples/MapOfflineData/Vector/DisplayCADFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayFileGeoDatabase",
        "title": "Display a FileGeoDatabase",
        "description": "This sample shows how to display a file geodatabase layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayFileGeoDatabase"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGeoPdfFile",
        "title": "Display a GeoPdf File",
        "description": "This sample shows how to display a PDF file.",
        "source": "Samples/MapOfflineData/Vector/DisplayGeoPdfFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGPXFile",
        "title": "Display a GPX File",
        "description": "This sample shows how to display a GPX layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayGPXFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGraticuleFile",
        "title": "Display a Graticule File",
        "description": "This sample shows how to display a graticule line layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayGraticuleFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayInMemoryFile",
        "title": "Display an InMemory File",
        "description": "This sample shows how to display an in memory layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayInMemoryFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayKMLFile",
        "title": "Display a KML File",
        "description": "This sample shows how to display a KML file.",
        "source": "Samples/MapOfflineData/Vector/DisplayKMLFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayCloudMapsVectorLayerOffline",
        "title": "Display a Cloud Maps Vector Layer Off-line",
        "description": "This sample show how to use an off-line version of ThinkGeo Cloud Map Vector data.",
        "source": "Samples/MapOfflineData/Vector/DisplayCloudMapsVectorLayerOffline"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayS57File",
        "title": "Display a S57 (Nautical Charts) File",
        "description": "This sample shows how to display S57 nautical charts.",
        "source": "Samples/MapOfflineData/Vector/DisplayS57File"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayShapefileFile",
        "title": "Display a Shapefile File",
        "description": "This sample shows how to display a shapefile layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayShapefileFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayTABFile",
        "title": "Display a TAB File",
        "description": "This sample shows how to display a TAB layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayTABFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayTinyGeoFile",
        "title": "Display a TinyGeo File",
        "description": "This sample shows how to display a TinyGeo layer.",
        "source": "Samples/MapOfflineData/Vector/DisplayTinyGeoFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayTableFromOracle",
        "title": "Display a table from Oracle",
        "description": "This sample shows how to display a Oracle layer.",
        "source": "Samples/MapOfflineData/Database/DisplayTableFromOracle"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayTableFromPostgres",
        "title": "Display a table from Postgres",
        "description": "This sample shows how to display a Postgres layer.",
        "source": "Samples/MapOfflineData/Database/DisplayTableFromPostgres"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayTableFromSQLServer",
        "title": "Display a table from SQL Server",
        "description": "This sample shows how to display a SQL Server layer.",
        "source": "Samples/MapOfflineData/Database/DisplayTableFromSQLServer"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GenerateESRIGridFile",
        "title": "Generate an ESRI Grid File",
        "description": "This sample shows how to generate an ESRI .grd Grid File from point data and display it on the map.",
        "source": "Samples/MapOfflineData/GenerateESRIGridFile"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GroupingLayersUsingLayerOverlay",
        "title": "Grouping Layers Using LayerOverlay",
        "description": "Learn to group layers into logical groups using LayerOverlays.",
        "source": "Samples/MapOfflineData/GroupingLayersUsingLayerOverlay"
      }
    ]
  },
  {
    "title": "Map Projection",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ProjectFeatures",
        "title": "Project Features",
        "description": "Learn how to reproject features using the ProjectionConverter class",
        "source": "Samples/MapProjection/ProjectFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ProjectARaster",
        "title": "Project a Raster",
        "description": "Learn how to reproject a raster layer using the ProjectionConverter class",
        "source": "Samples/MapProjection/ProjectARaster"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.SettingTheProjectionOfALayer",
        "title": "Setting the Projection of a Layer",
        "description": "Learn how to automatically reproject a layer using the ProjectionConverter class",
        "source": "Samples/MapProjection/SettingTheProjectionOfALayer"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ProjectTheWorld",
        "title": "Project the World",
        "description": "A small collection of some interesting projections.",
        "source": "Samples/MapProjection/ProjectTheWorld"
      }
    ]
  },
  {
    "title": "Map Tools",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Logo",
        "title": "Logo",
        "description": "Learn to render a custom logo on the map.",
        "source": "Samples/MapTools/Logo"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.MouseCoordinates",
        "title": "Mouse Coordinates",
        "description": "Learn to render coordinate info based on the mouse cursor position on the map.",
        "source": "Samples/MapTools/MouseCoordinates"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.PanZoomBar",
        "title": "Pan Zoom Bar",
        "description": "Learn to render a PanZoomBar on the map.",
        "source": "Samples/MapTools/PanZoomBar"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ScaleLine",
        "title": "Scale Line",
        "description": "Learn to render a ScaleLine on the map in a variety of different of styles.",
        "source": "Samples/MapTools/ScaleLine"
      }
    ]
  },
  {
    "title": "Markers and Popups",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.AnimatedMarker",
        "title": "Animated Marker",
        "description": "Learn to add an animated marker on the map using the custom icon.",
        "source": "Samples/MarkersandPopups/AnimatedMarker"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Markers",
        "title": "Markers",
        "description": "Learn to add, edit, or remove markers on the map using the MarkerOverlay.",
        "source": "Samples/MarkersandPopups/Markers"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Popups",
        "title": "Popups",
        "description": "Learn to add, edit, or remove popups on the map using the PopupOverlay.",
        "source": "Samples/MarkersandPopups/Popups"
      }
    ]
  },
  {
    "title": "Vector Data Styling",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderPoints",
        "title": "Render Points",
        "description": "Render points using a PointStyle.",
        "source": "Samples/VectorDataStyling/RenderPoints"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderLines",
        "title": "Render Lines",
        "description": "Render lines using a LineStyle.",
        "source": "Samples/VectorDataStyling/RenderLines"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderAreas",
        "title": "Render Areas",
        "description": "Render polygons using an AreaStyle.",
        "source": "Samples/VectorDataStyling/RenderAreas"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderLabels",
        "title": "Render Labels",
        "description": "Render labels using a TextStyle.",
        "source": "Samples/VectorDataStyling/RenderLabels"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderBasedOnFilters",
        "title": "Render Based on Filters",
        "description": "Render certain features using a FilterStyle.",
        "source": "Samples/VectorDataStyling/RenderBasedOnFilters"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderBasedOnRegex",
        "title": "Render Based on Regex",
        "description": "Render certain features using regular expressions.",
        "source": "Samples/VectorDataStyling/RenderBasedOnRegex"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderBasedOnScales",
        "title": "Render Based on Scales",
        "description": "Render the data based on zoom levels. Zoom in and out to see the style difference.",
        "source": "Samples/VectorDataStyling/RenderBasedOnScales"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderBasedOnValues",
        "title": "Render Based on Values",
        "description": "Render points based on their values using a ValueStyle.",
        "source": "Samples/VectorDataStyling/RenderBasedOnValues"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RenderBasedOnClassBreaks",
        "title": "Render Based on ClassBreaks",
        "description": "Render polygons based on their values using a ClassBreakStyle.",
        "source": "Samples/VectorDataStyling/RenderBasedOnClassBreaks"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayClusterPoints",
        "title": "Display Cluster Points",
        "description": "Cluster points using a ClusterPointStyle.",
        "source": "Samples/VectorDataStyling/DisplayClusterPoints"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayDotDensity",
        "title": "Display Dot Density",
        "description": "Render polygons with dot densities based on their values.",
        "source": "Samples/VectorDataStyling/DisplayDotDensity"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayHeatMap",
        "title": "Display HeatMap",
        "description": "Render a heatmap using a HeatStyle.",
        "source": "Samples/VectorDataStyling/DisplayHeatMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayISOLine",
        "title": "Display ISOLine",
        "description": "This sample shows how to display an ISOLine layer.",
        "source": "Samples/VectorDataStyling/DisplayISOLine"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CustomStyles",
        "title": "Custom Styles",
        "description": "Render capitals using custom styles.",
        "source": "Samples/VectorDataStyling/CustomStyles"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CreateAFleeBooleanStyle",
        "title": "Create a Flee Boolean Style",
        "description": "Learn how to style data based on data values using a FleeBooleanStyle",
        "source": "Samples/VectorDataStyling/CreateAFleeBooleanStyle/CreateAFleeBooleanStyle"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CreateAMultiColumnTextStyle",
        "title": "Create a Multi-Column Text Style",
        "description": "Learn how to label a feature using the data from multiple columns",
        "source": "Samples/VectorDataStyling/CreateAMultiColumnTextStyle"
      }
    ]
  },
  {
    "title": "Vector Data Editing",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.EditFeatures",
        "title": "Edit Features",
        "description": "Draw, edit, or delete shapes.",
        "source": "Samples/VectorDataEditing/EditFeatures"
      }
    ]
  },
  {
    "title": "Vector Data Spatial Query",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CheckIfFeaturesAreEqual",
        "title": "Check if Features are Equal",
        "description": "Learn how to use layer query tools to find which features in a layer are topologically equal to a shape",
        "source": "Samples/VectorDataSpatialQuery/CheckIfFeaturesAreEqual"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindContainingFeatures",
        "title": "Find Containing Features",
        "description": "Learn how to use layer query tools to find which features in a layer contain a shape",
        "source": "Samples/VectorDataSpatialQuery/FindContainingFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindCrossingFeatures",
        "title": "Find Crossing Features",
        "description": "Learn how to use layer query tools to find which features in a layer a shape crosses",
        "source": "Samples/VectorDataSpatialQuery/FindCrossingFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindDisjointFeatures",
        "title": "Find Disjoint Features",
        "description": "Learn how to use layer query tools to find which features in a layer are disjoint from a shape",
        "source": "Samples/VectorDataSpatialQuery/FindDisjointFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindFeaturesWithinADistance",
        "title": "Find Features Within a Distance",
        "description": "Learn how to use layer query tools to find features in a layer within a given distance of a point",
        "source": "Samples/VectorDataSpatialQuery/FindFeaturesWithinADistance"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindFeaturesWithinAFeature",
        "title": "Find Features Within a Feature",
        "description": "Learn how to use layer query tools to find which features in a layer are within a shape",
        "source": "Samples/VectorDataSpatialQuery/FindFeaturesWithinAFeature"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindIntersectingFeatures",
        "title": "Find Intersecting Features",
        "description": "Learn how to use layer query tools to find which features in a layer intersect a shape",
        "source": "Samples/VectorDataSpatialQuery/FindIntersectingFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindOverlappingFeatures",
        "title": "Find Overlapping Features",
        "description": "Learn how to use layer query tools to find which features in a layer overlap a shape",
        "source": "Samples/VectorDataSpatialQuery/FindOverlappingFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.FindTouchingFeatures",
        "title": "Find Touching Features",
        "description": "Learn how to use layer query tools to find which features in a layer are touching a shape",
        "source": "Samples/VectorDataSpatialQuery/FindTouchingFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetDataFromAllFeatures",
        "title": "Get Data from All Features",
        "description": "Learn how to get data from all features in a ShapeFile",
        "source": "Samples/VectorDataSpatialQuery/GetDataFromAllFeatures"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetDatafromOneFeature",
        "title": "Get Data from One Feature",
        "description": "Learn how to get data from a feature in a ShapeFile",
        "source": "Samples/VectorDataSpatialQuery/GetDatafromOneFeature"
      }
    ]
  },
  {
    "title": "Vector Data Geometric Operation",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.UnionShapes",
        "title": "Union Shapes",
        "description": "Learn how to union shapes into a single shape",
        "source": "Samples/VectorDataGeometricOperation/UnionShapes"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.BufferShape",
        "title": "Buffer a Shape",
        "description": "Learn how to buffer a shape",
        "source": "Samples/VectorDataGeometricOperation/BufferShape"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.SimplifyShape",
        "title": "Simplify a Shape",
        "description": "Learn how to simplify a shape's geometry",
        "source": "Samples/VectorDataGeometricOperation/SimplifyShape"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RotateShape",
        "title": "Rotate a Shape",
        "description": "Learn how to rotate a shape",
        "source": "Samples/VectorDataGeometricOperation/RotateShape"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ScaleShape",
        "title": "Scale a Shape",
        "description": "Learn how to scale a shape",
        "source": "Samples/VectorDataGeometricOperation/ScaleShape"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.TranslateShape",
        "title": "Translate a Shape",
        "description": "Learn how to translate a shape",
        "source": "Samples/VectorDataGeometricOperation/TranslateShape"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CalculateCenterPoint",
        "title": "Calculate the Center Point",
        "description": "Learn how to calculate the center point of a feature",
        "source": "Samples/VectorDataGeometricOperation/CalculateCenterPoint"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CalculateArea",
        "title": "Calculate Area",
        "description": "Learn how to calculate the area of a feature",
        "source": "Samples/VectorDataGeometricOperation/CalculateArea"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CalculateLength",
        "title": "Calculate Length",
        "description": "Learn how to calculate the length of a line",
        "source": "Samples/VectorDataGeometricOperation/CalculateLength"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetShortestLine",
        "title": "Get Shortest Line",
        "description": "Learn how to calculate the shortest line between two shapes",
        "source": "Samples/VectorDataGeometricOperation/GetShortestLine"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetLineOnALine",
        "title": "Get Line on a Line",
        "description": "Learn how to get part of a line from an existing line",
        "source": "Samples/VectorDataGeometricOperation/GetLineOnALine"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ClipShape",
        "title": "Clip Shape",
        "description": "Learn how to clip a shape from another shape",
        "source": "Samples/VectorDataGeometricOperation/ClipShape"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetShapeDifferences",
        "title": "Get Shape Differences",
        "description": "Learn how to find the difference of shapes",
        "source": "Samples/VectorDataGeometricOperation/GetShapeDifferences"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetConvexHull",
        "title": "Get Convex Hull",
        "description": "Learn how to get the convex hull of a shape",
        "source": "Samples/VectorDataGeometricOperation/GetConvexHull"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetEnvelope",
        "title": "Get Envelope",
        "description": "Learn how to get the envelope of a shape",
        "source": "Samples/VectorDataGeometricOperation/GetEnvelope"
      }
    ]
  },
  {
    "title": "Vector Data Topological Validation",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ValidatePointTopology",
        "title": "Validate Point Topology",
        "description": "Perform validation on points.",
        "source": "Samples/VectorDataTopologicalValidation/ValidatePointTopology"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ValidateLineTopology",
        "title": "Validate Line Topology",
        "description": "Perform validation on lines.",
        "source": "Samples/VectorDataTopologicalValidation/ValidateLineTopology"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ValidatePolygonTopology",
        "title": "Validate Polygon Topology",
        "description": "Perform validation on polygons.",
        "source": "Samples/VectorDataTopologicalValidation/ValidatePolygonTopology"
      }
    ]
  },
  {
    "title": "ThinkGeo Cloud Integration",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ColorUtilities",
        "title": "Color Utilities",
        "description": "Learn how to use the ColorCloudClient class to access the ColorUtilities APIs available from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/ColorUtilities"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Elevation",
        "title": "Elevation",
        "description": "Learn how to use the ElevationCloudClient class to get elevation data from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/Elevation"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Geocoding",
        "title": "Geocoding",
        "description": "Learn how to use the GeocodingCloudClient to access the Geocoding APIs available from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/Geocoding"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ProjectionCloudServices",
        "title": "Projection",
        "description": "Learn how to use the ProjectionCloudClient to access the Projection APIs available from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/ProjectionCloudServices"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ReverseGeocoding",
        "title": "Reverse Geocoding",
        "description": "Learn how to use the ReverseGeocodingCloudClient to access the ReverseGeocoding APIs available from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/ReverseGeocoding"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Routing",
        "title": "Routing",
        "description": "Learn how to use the RoutingCloudClient to route through a set of waypoints with the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/Routing"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RoutingServiceArea",
        "title": "Routing - Service Area",
        "description": "Learn how to use the RoutingCloudClient to find the service area of a location with the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/RoutingServiceArea"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.RoutingTravelingSalesPerson",
        "title": "Routing - Traveling Sales Person",
        "description": "Learn how to use the RoutingCloudClient to find an optimized route through a set of waypoints with the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/RoutingTravelingSalesPerson"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.Timezone",
        "title": "Timezone",
        "description": "Learn how to use the TimezoneCloudClient to access the Timezone APIs available from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/Timezone"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.WorldMapsQuery",
        "title": "World Maps Query",
        "description": "Learn how to use the MapsQueryClient to query the WorldMaps dataset available from the ThinkGeo Cloud",
        "source": "Samples/ThinkGeoCloudIntegration/WorldMapsQuery"
      }
    ]
  },
  {
    "title": "Miscellaneous",
    "children": [
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.PrintTheMap",
        "title": "Print the Map",
        "description": "Learn to print maps using the PrintOverlay.",
        "source": "Samples/Miscellaneous/PrintTheMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.HandleExceptions",
        "title": "Handle Exceptions",
        "description": "Learn how to throw an overlay exception, or draw the exception on the map.",
        "source": "Samples/Miscellaneous/HandleExceptions"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.ResizeTheMap",
        "title": "Resize the Map",
        "description": "Learn how to resize the map while keeping the width of the world extent the same",
        "source": "Samples/Miscellaneous/ResizeTheMap"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.WrapTheDateLine",
        "title": "Wrap the DateLine",
        "description": "Say the world width is 0 ~ 1, here shows what the shapes with different length look like in the multi-world map",
        "source": "Samples/Miscellaneous/WrapTheDateLine"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.DrawTheMapOnAnImage",
        "title": "Draw the map on an Image",
        "description": "This sample shows how to draw your map onto an image file",
        "source": "Samples/Miscellaneous/DrawTheMapOnAnImage"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.GetMapSnapShot",
        "title": "Get Map SnapShot",
        "description": "Learn how to get the snapshot of the current map",
        "source": "Samples/Miscellaneous/GetMapSnapShot"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.UpdateTheGPSLocation",
        "title": "Update the GPS Location",
        "description": "Learn how to display a GPS vehicle's movements in real-time",
        "source": "Samples/Miscellaneous/UpdateTheGPSLocation"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.PerfTestRefreshShapes",
        "title": "Perf Test: Refresh shapes",
        "description": "Learn how to use overlays to display dynamically refreshing data. This sample will shows how to refresh 20,000 polygons every seconds.",
        "source": "Samples/Miscellaneous/PerfTestRefreshShapes"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CustomBackground",
        "title": "Custom Background",
        "description": "Learn how to display a background overlay",
        "source": "Samples/Miscellaneous/CustomBackground"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CustomFeatureLayer",
        "title": "Custom Feature Layer",
        "description": "Learn how to use the Layer base class to create your own custom layers.",
        "source": "Samples/Miscellaneous/CustomFeatureLayer"
      },
      {
        "id": "ThinkGeo.UI.Wpf.HowDoI.CustomFeatureSources",
        "title": "Custom Feature Sources",
        "description": "Learn how to use the FeatureSource base class to create your own custom Feature Source.",
        "source": "Samples/Miscellaneous/CustomFeatureSources"
      }
      //,
      //{
      //  "id": "ThinkGeo.UI.Wpf.HowDoI.Placeholder",
      //  "title": "Interpolation Methods (TODO)",
      //  "description": "Learn how to do grid based interpolation using various methods",
      //  "source": "Samples/Miscellaneous/Placeholder"
      //}
    ]
  }
  //{
  //  "title": "Using Overlays",
  //  "children": [
  //    {
  //      "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayBingMapsOverlaySample",
  //      "title": "Display Bing Maps Overlay",
  //      "description": "Learn to render Bing Maps using the BingMapsOverlay. A valid Bing Maps ApplicationID is required. Visit the Bing Maps Dev Portal to sign up for a key (https://www.bingmapsportal.com/).",
  //      "source": "Samples/UsingOverlays/DisplayBingMapsOverlaySample"
  //    },
  //    {
  //      "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayCloudMapsRasterOverlaySample",
  //      "title": "Display Cloud Maps Raster Overlay",
  //      "description": "Learn to render ThinkGeo Cloud Maps in raster format. Sign up for your own ThinkGeo Cloud API key at https://cloud.thinkgeo.com!",
  //      "source": "Samples/UsingOverlays/DisplayCloudMapsRasterOverlaySample"
  //    },
  //    {
  //      "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayCloudMapsVectorOverlaySample",
  //      "title": "Display Cloud Maps Vector Overlay",
  //      "description": "Learn to render ThinkGeo Cloud Maps in vector format. Sign up for your own ThinkGeo Cloud API key at https://cloud.thinkgeo.com!",
  //      "source": "Samples/UsingOverlays/DisplayCloudMapsVectorOverlaySample"
  //    },
  //    {
  //      "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayGoogleMapsOverlaySample",
  //      "title": "Display Google Maps Overlay",
  //      "description": "Learn to render Google Maps using the GoogleMapsOverlay. A Google Maps API key is required. Visit the Google Maps Platform page to sign up for a key (https://cloud.google.com/maps-platform/ *The default Google Maps Static API Key returns images up to 640 x 640 pixels).",
  //      "source": "Samples/UsingOverlays/DisplayGoogleMapsOverlaySample"
  //    },
  //    {
  //      "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayOpenStreetMapOverlaySample",
  //      "title": "Display OpenStreetMap Overlay",
  //      "description": "Learn to render OpenStreetMap using the OpenStreetMapOverlay. OpenStreetMap Tiles are not meant for heavy production use without express permission from the OpenStreetMap Foundation. See https://operations.osmfoundation.org/ for details about their usage policies.",
  //      "source": "Samples/UsingOverlays/DisplayOpenStreetMapOverlaySample"
  //    },
  //    {
  //      "id": "ThinkGeo.UI.Wpf.HowDoI.DisplayWmsOverlaySample",
  //      "title": "Display a WMS Overlay",
  //      "description": "Learn to render a Web Map Service using the WMSOverlay. Please be aware that this is a publicly available WMS server and it may be slow to load.",
  //      "source": "Samples/UsingOverlays/DisplayWmsOverlaySample"
  //    }
  //  ]
  //}
]