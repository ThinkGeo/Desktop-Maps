//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicMarkerOverlay.NaFacilityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacilityModel", Namespace="http://schemas.datacontract.org/2004/07/DataWebService")]
    [System.SerializableAttribute()]
    public partial class FacilityModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AirportCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PackageAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SkidAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkidsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AirportCode {
            get {
                return this.AirportCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AirportCodeField, value) != true)) {
                    this.AirportCodeField = value;
                    this.RaisePropertyChanged("AirportCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PackageAverage {
            get {
                return this.PackageAverageField;
            }
            set {
                if ((this.PackageAverageField.Equals(value) != true)) {
                    this.PackageAverageField = value;
                    this.RaisePropertyChanged("PackageAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Packages {
            get {
                return this.PackagesField;
            }
            set {
                if ((this.PackagesField.Equals(value) != true)) {
                    this.PackagesField = value;
                    this.RaisePropertyChanged("Packages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SkidAverage {
            get {
                return this.SkidAverageField;
            }
            set {
                if ((this.SkidAverageField.Equals(value) != true)) {
                    this.SkidAverageField = value;
                    this.RaisePropertyChanged("SkidAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Skids {
            get {
                return this.SkidsField;
            }
            set {
                if ((this.SkidsField.Equals(value) != true)) {
                    this.SkidsField = value;
                    this.RaisePropertyChanged("Skids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NaFacilityService.DataService")]
    public interface DataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DataService/GetFacilities", ReplyAction="http://tempuri.org/DataService/GetFacilitiesResponse")]
        DynamicMarkerOverlay.NaFacilityService.FacilityModel[] GetFacilities();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataServiceChannel : DynamicMarkerOverlay.NaFacilityService.DataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<DynamicMarkerOverlay.NaFacilityService.DataService>, DynamicMarkerOverlay.NaFacilityService.DataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DynamicMarkerOverlay.NaFacilityService.FacilityModel[] GetFacilities() {
            return base.Channel.GetFacilities();
        }
    }
}
