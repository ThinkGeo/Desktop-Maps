//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThinkGeo.MapSuite.VehicleTracking.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ThinkGeo.MapSuite.VehicleTracking.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BingAerial.
        /// </summary>
        internal static string BingAerialKey {
            get {
                return ResourceManager.GetString("BingAerialKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bing Maps Aerial Map.
        /// </summary>
        internal static string BingMapsAerialMapName {
            get {
                return ResourceManager.GetString("BingMapsAerialMapName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bing Maps Road Map.
        /// </summary>
        internal static string BingMapsRoadMapName {
            get {
                return ResourceManager.GetString("BingMapsRoadMapName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BingRoad.
        /// </summary>
        internal static string BingRoadKey {
            get {
                return ResourceManager.GetString("BingRoadKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose a fence!.
        /// </summary>
        internal static string ChooseFenceWarning {
            get {
                return ResourceManager.GetString("ChooseFenceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the fence you have selected?.
        /// </summary>
        internal static string DeleteFenceWarning {
            get {
                return ResourceManager.GetString("DeleteFenceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenStreetMap.
        /// </summary>
        internal static string OpenStreetMapKey {
            get {
                return ResourceManager.GetString("OpenStreetMapKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Street Map.
        /// </summary>
        internal static string OpenStreetMapName {
            get {
                return ResourceManager.GetString("OpenStreetMapName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PopupOverlay.
        /// </summary>
        internal static string PopupOverlayName {
            get {
                return ResourceManager.GetString("PopupOverlayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restricted.
        /// </summary>
        internal static string RestrictedName {
            get {
                return ResourceManager.GetString("RestrictedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScaleBar.
        /// </summary>
        internal static string ScaleBarName {
            get {
                return ResourceManager.GetString("ScaleBarName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpatialFenceLayer.
        /// </summary>
        internal static string SpatialFenceLayerName {
            get {
                return ResourceManager.GetString("SpatialFenceLayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpatialFenceOverlay.
        /// </summary>
        internal static string SpatialFenceOverlayName {
            get {
                return ResourceManager.GetString("SpatialFenceOverlayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ThinkGeoCloudMap Hybrid.
        /// </summary>
        internal static string ThinkGeoCloudMapAerialOverlay {
            get {
                return ResourceManager.GetString("ThinkGeoCloudMapAerialOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ThinkGeoCloudMap Light.
        /// </summary>
        internal static string ThinkGeoCloudMapHybridOverlay {
            get {
                return ResourceManager.GetString("ThinkGeoCloudMapHybridOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ThinkGeoCloudMap Dark.
        /// </summary>
        internal static string ThinkGeoCloudMapLightOverlay {
            get {
                return ResourceManager.GetString("ThinkGeoCloudMapLightOverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TraceOverlay.
        /// </summary>
        internal static string TraceOverlayName {
            get {
                return ResourceManager.GetString("TraceOverlayName", resourceCulture);
            }
        }
    }
}
